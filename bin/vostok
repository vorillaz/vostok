#!/usr/bin/env node
const path = require('path');
const boxen = require('boxen');
const {version} = require('../package.json');
const spawn = require('cross-spawn');
const {logInfo, logRedAlert, shouldUpdate} = require('../src/utils');

const defaultCommand = 'dev';

const commands = new Set(['build', defaultCommand]);

let cmd = process.argv[2];
let args;

if (new Set(['--version', '-v']).has(cmd)) {
  logInfo(`\nVostok version ${version}`);
  process.exit(0);
}

if (new Set(['--help', '-h']).has(cmd)) {
  console.log(
    boxen(
      `
    Usage
      $ vostok <command>
    Available commands
      ${Array.from(commands).join(', ')}
    For more information run a command with the --help flag
      $ vostok --help
  `,
      {
        padding: 1,
        borderColor: 'green',
        margin: 1
      }
    )
  );
  process.exit(0);
}


if (commands.has(cmd)) {
  args = process.argv.slice(3);
} else {
  cmd = defaultCommand;
  args = process.argv.slice(2);
}

const bin = path.resolve(path.join(__dirname, cmd));

const startProcess = async () => {
  try {
    const v = await shouldUpdate(version);
    logRedAlert(`There is a new version of Vostok available: v${v}`)
  } catch (error) {

  }
  const proc = spawn(bin, args, {stdio: 'inherit'});
  proc.on('close', code => process.exit(code));
  proc.on('error', err => {
    console.error(err);
    process.exit(1);
  });
  return proc;
};

startProcess();
